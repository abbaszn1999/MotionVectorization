root@ec25add1092f:/workspace/MotionVectorization# # اختبار RAFT منفصل أولاً
cd RAFT
python3 -c "
import sys
sys.path.append('core')
from core.raft import RAFT
print('✅ RAFT import successful')
"

# إذا نجح، تجربة extract_flow
python3 extract_flow.py --help
cd ..
✅ RAFT import successful
usage: extract_flow.py [-h] [--model MODEL] [--path PATH] [--small] [--mixed_precision] [--alternate_corr] [--max_frames MAX_FRAMES] [--add_back]

options:
  -h, --help            show this help message and exit
  --model MODEL         restore checkpoint
  --path PATH           dataset for evaluation
  --small               use small model
  --mixed_precision     use mixed precision
  --alternate_corr      use efficent correlation implementation
  --max_frames MAX_FRAMES
                        number of frames to extract flow
  --add_back            also compute backwards optical flow
root@ec25add1092f:/workspace/MotionVectorization# ./scripts/correct_script.sh videos/demo.txt
Processing video: demo
PREPROCESS
RAFT
usage: extract_flow.py [-h] [--model MODEL] [--path PATH] [--small] [--mixed_precision] [--alternate_corr] [--max_frames MAX_FRAMES] [--add_back]
extract_flow.py: error: unrecognized arguments: --video_file demo.mp4
root@ec25add1092f:/workspace/MotionVectorization# # فحص النماذج المتاحة في RAFT
ls RAFT/models/

# إنشاء السكريپت الصحيح
cat > scripts/final_script.sh << 'EOF'
#!/bin/bash
set -e

video_list=$1
video_name=$(cat $video_list)

echo "Processing video: $video_name"

# PREPROCESS 
echo "PREPROCESS"
python3 -m motion_vectorization.preprocess --video_file ${video_name}.mp4

# RAFT (with correct arguments!)
echo "RAFT" 
cd RAFT
python3 extract_flow.py --path ../videos/${video_name} --model models/raft-things.pth --max_frames 100
cd ..

# CLUSTER
echo "CLUSTER"
python3 -m motion_vectorization.extract_clusters --video_file ${video_name}.mp4 --config motion_vectorization/config/${video_name}.json

# TRACK
echo "TRACK"
python3 -m motion_vectorization.extract_shapes --video_file ${video_name}.mp4 --config motion_vectorization/config/${video_name}.json

# OPTIM
echo "OPTIM"
python3 -m motion_vectorization.optimize_shapes --video_file ${video_name}.mp4 --config motion_vectorization/config/${video_name}.json

# PROGRAM
echo "PROGRAM"
python3 -m motion_vectorization.create_motion_file --video_file ${video_name}.mp4 --config motion_vectorization/config/${video_name}.json

echo "✅ Processing complete!"
EOF

chmod +x scripts/final_script.sh
models.zip
root@ec25add1092f:/workspace/MotionVectorization# # التحقق من وجود rgb folder
ls videos/demo/rgb/

# التحقق من النماذج المتاحة  
ls RAFT/models/

# اختبار RAFT مع المعاملات الصحيحة
cd RAFT
python3 extract_flow.py --path ../videos/demo --model models/raft-things.pth --max_frames 10
cd ..

# التحقق من نجاح RAFT
ls videos/demo/flow/
001.png  007.png  013.png  019.png  025.png  031.png  050.png  056.png  062.png  068.png  074.png  092.png  098.png  104.png  110.png  116.png  135.png  141.png  147.png  153.png  159.png
002.png  008.png  014.png  020.png  026.png  032.png  051.png  057.png  063.png  069.png  075.png  093.png  099.png  105.png  111.png  117.png  136.png  142.png  148.png  154.png
003.png  009.png  015.png  021.png  027.png  033.png  052.png  058.png  064.png  070.png  076.png  094.png  100.png  106.png  112.png  118.png  137.png  143.png  149.png  155.png
004.png  010.png  016.png  022.png  028.png  034.png  053.png  059.png  065.png  071.png  077.png  095.png  101.png  107.png  113.png  132.png  138.png  144.png  150.png  156.png
005.png  011.png  017.png  023.png  029.png  035.png  054.png  060.png  066.png  072.png  078.png  096.png  102.png  108.png  114.png  133.png  139.png  145.png  151.png  157.png
006.png  012.png  018.png  024.png  030.png  049.png  055.png  061.png  067.png  073.png  091.png  097.png  103.png  109.png  115.png  134.png  140.png  146.png  152.png  158.png
models.zip
Traceback (most recent call last):
  File "/workspace/MotionVectorization/RAFT/extract_flow.py", line 158, in <module>
    demo(args)
  File "/workspace/MotionVectorization/RAFT/extract_flow.py", line 95, in demo
    model.load_state_dict(torch.load(args.model))
                          ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/serialization.py", line 1479, in load
    with _open_file_like(f, "rb") as opened_file:
         ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/serialization.py", line 759, in _open_file_like
    return _open_file(name_or_buffer, mode)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/serialization.py", line 740, in __init__
    super().__init__(open(name, mode))
                     ^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'models/raft-things.pth'
backward  forward  viz